"""
Optical Neural Networks (ONNs) Module for OpticalCI

Este m√≥dulo implementa redes neuronales √≥pticas usando los componentes
fot√≥nicos fundamentales de OpticalCI como building blocks.

üéØ Objetivo: Simulaciones rigurosas de ONNs basadas en literatura cient√≠fica
üìö Referencias: Shen et al. (2017), Tait et al. (2017), Hughes et al. (2018)

Arquitecturas Implementadas:
- CoherentONN: Redes coherentes usando mesh de MZIs (interferom√©tricas)
- IncoherentONN: Redes incoherentes usando arrays de microrings (intensity-based)

Caracter√≠sticas:
‚úÖ F√≠sica realista usando componentes OpticalCI existentes
‚úÖ Conservaci√≥n de energ√≠a y propiedades unitarias
‚úÖ Entrenamiento adaptado para limitaciones √≥pticas
‚úÖ Benchmarks est√°ndar (MNIST, clasificaci√≥n)
"""

__version__ = "1.0.0"
__author__ = "OpticalCI ONNs Module"

# Imports principales (solo cuando est√©n implementados)
try:
    from .architectures import CoherentONN, BaseONN
    from .benchmarks import OpticalMNIST
    __all__ = [
        "CoherentONN",
        "BaseONN", 
        "OpticalMNIST",
    ]
except ImportError:
    # Durante desarrollo incremental, algunos m√≥dulos pueden no existir a√∫n
    __all__ = []

# Configuraci√≥n por defecto para ONNs
DEFAULT_COHERENT_PRECISION = "float32"  # Para matrices unitarias
DEFAULT_WAVELENGTH_CHANNELS = 8         # Para WDM en ONNs
DEFAULT_OPTICAL_POWER = 1.0            # Potencia √≥ptica normalizada

def get_onn_info():
    """Informaci√≥n del m√≥dulo ONNs."""
    return {
        "version": __version__,
        "architectures_available": __all__,
        "base_components": [
            "MZILayer", "MZIBlockLinear", "MicroringResonator", 
            "WDMMultiplexer", "Photodetector"
        ],
        "status": "Development - Fase 1"
    }